Namespaces:
  =: io.murano.apps.docker
  std: io.murano
  sys: io.murano.system
  apps: io.murano.apps
  tc: io.murano.apps.apache

Name: DockerApp

Extends: std:Application

Properties:
  name:
    Contract: $.string().notNull()
  docker:
    Contract: $.class('io.murano.apps.docker.DockerService').notNull()
  image:
    Contract: $.string().notNull()
  port:
    Contract: $.int()
  bindings:
    Contract: $.int()
    Usage: Out

Workflow:
  initialize:
    Body:
      - $.environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed)
        Then:
          - $.environment.reporter.report($this, 'Checking for Docker Service availability')
          - $.docker.deploy()
          - $.environment.reporter.report($this, 'Installing Application')
          - $.docker.addApplication(
              docker_image => $.image,
              docker_env => '',
              app_port => $.port
              )
          - $.environment.reporter.report($this, 'Application deployed')
          - $.setAttr(deployed, True)